var ElapsedTimeBar={barColor:"rgb(200,0,0)",pausedBarColor:"rgba(200,0,0,.6)",isPaused:!1,isFinished:!1,allottedTime:null,timeProgressBar:null,startTime:null,pauseTime:null,pauseTimeDuration:0,handleReady(){var barHeight,pageProgressContainer,timeProgressContainer,config=Reveal.getConfig();config.allottedTime?(this.barColor=config.barColor||this.barColor,this.pausedBarColor=config.pausedBarColor||this.pausedBarColor,pageProgressContainer=document.querySelector(".progress"),config.progressBarHeight?(barHeight=parseInt(config.progressBarHeight,10)+"px",pageProgressContainer&&(pageProgressContainer.style.height=barHeight)):barHeight=config.progress&&pageProgressContainer?pageProgressContainer.getBoundingClientRect().height+"px":"3px",(timeProgressContainer=document.createElement("div")).classList.add("progress"),Object.entries({display:"block",position:"fixed",bottom:config.progress?barHeight:0,width:"100%",height:barHeight}).forEach(([k,v])=>{timeProgressContainer.style[k]=v}),document.querySelector(".reveal").appendChild(timeProgressContainer),this.timeProgressBar=document.createElement("div"),Object.entries({height:"100%",willChange:"width"}).forEach(([k,v])=>{this.timeProgressBar.style[k]=v}),timeProgressContainer.appendChild(this.timeProgressBar),this.start(config.allottedTime)):console.warn('Failed to start ElapsedTimeBar plugin. "allottedTime" property is required.')},loop(){var elapsedTime;this.isPaused||((elapsedTime=+new Date-this.startTime-this.pauseTimeDuration)>this.allottedTime?(this.timeProgressBar.style.width="100%",this.isFinished=!0):(this.timeProgressBar.style.width=elapsedTime/this.allottedTime*100+"%",requestAnimationFrame(this.loop.bind(this))))},setBarColor(){this.isPaused?this.timeProgressBar.style.backgroundColor=this.pausedBarColor:this.timeProgressBar.style.backgroundColor=this.barColor},start(allottedTime,elapsedTime=0){this.isFinished=!1,this.isPaused=!1,this.allottedTime=allottedTime,this.startTime=+new Date-elapsedTime,this.pauseTimeDuration=0,this.setBarColor(),this.loop()},reset(){this.start(this.allottedTime)},pause(){this.isPaused||(this.isPaused=!0,this.pauseTime=+new Date,this.setBarColor())},resume(){this.isPaused&&(this.isPaused=!1,this.pauseTimeDuration+=new Date-this.pauseTime,this.pauseTime=null,this.setBarColor(),this.loop())}};Reveal.isReady()?ElapsedTimeBar.handleReady():Reveal.addEventListener("ready",()=>ElapsedTimeBar.handleReady());