import mermaid from"mermaid/dist/mermaid.js";async function renderMermaid({el,beforeRender,afterRender}){var beforeRenderRes=await beforeRender?.(el);if(!1!==beforeRenderRes){beforeRenderRes=el.textContent.trim();try{var svgCode=(await mermaid.render("mermaid-"+Math.random().toString(36).substring(2),beforeRenderRes)).svg;el.innerHTML=svgCode,await afterRender?.(el)}catch(error){let errorStr="";error?.str&&(errorStr=error.str),error?.message&&(errorStr=error.message),console.error(errorStr,{error:error,graphDefinition:beforeRenderRes,el:el}),el.innerHTML=errorStr}}}function getRenderMermaidEl({beforeRender,afterRender}){return function(el){return renderMermaid({el:el,beforeRender:beforeRender,afterRender:afterRender})}}let Plugin={id:"mermaid",init:function(reveal){let{...mermaidConfig}=reveal.getConfig().mermaid||{},{...mermaidPluginConfig}=reveal.getConfig().mermaidPlugin||{},renderMermaidEl=getRenderMermaidEl({beforeRender:mermaidPluginConfig.beforeRender,afterRender:mermaidPluginConfig.afterRender});mermaid.initialize({startOnLoad:!1,...mermaidConfig});var mermaidEls=reveal.getRevealElement().querySelectorAll(".mermaid");Array.from(mermaidEls).forEach(function(el){renderMermaidEl(el)})}};export default()=>Plugin;