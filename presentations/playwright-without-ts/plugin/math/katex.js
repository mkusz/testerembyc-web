let KaTeX=()=>{let deck,defaultOptions={version:"latest",delimiters:[{left:"$$",right:"$$",display:!0},{left:"$",right:"$",display:!1},{left:"\\(",right:"\\)",display:!1},{left:"\\[",right:"\\]",display:!0}],ignoredTags:["script","noscript","style","textarea","pre"]};async function loadScripts(urls){for(var url of urls)await(src=>new Promise((resolve,reject)=>{var script=document.createElement("script");script.type="text/javascript",script.onload=resolve,script.onerror=reject,script.src=src,document.head.append(script)}))(url)}return{id:"katex",init:function(reveal){var revealOptions=(deck=reveal).getConfig().katex||{},revealOptions={...defaultOptions,...revealOptions};let{local,version,extensions,...katexOptions}=revealOptions;var src,baseUrl=revealOptions.local||"https://cdn.jsdelivr.net/npm/katex",versionString=revealOptions.local?"":"@"+revealOptions.version,cssUrl=baseUrl+versionString+"/dist/katex.min.css",mhchemUrl=baseUrl+versionString+"/dist/contrib/mhchem.min.js",karUrl=baseUrl+versionString+"/dist/contrib/auto-render.min.js",baseUrl=[baseUrl+versionString+"/dist/katex.min.js"];revealOptions.extensions&&revealOptions.extensions.includes("mhchem")&&baseUrl.push(mhchemUrl),baseUrl.push(karUrl);let renderMath=()=>{renderMathInElement(reveal.getSlidesElement(),katexOptions),deck.layout()};src=cssUrl,(versionString=document.createElement("link")).rel="stylesheet",versionString.href=src,document.head.appendChild(versionString),loadScripts(baseUrl).then(()=>{deck.isReady()?renderMath():deck.on("ready",renderMath.bind(this))})}}};export{KaTeX};